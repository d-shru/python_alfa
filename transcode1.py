#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Есть строки
# Нужно привести их к виду: 
# 2018-11-21;;-1940,90;Транспорт:Общественный транспорт;Метро;C;
#
import re

L = [['ЗАРАБОТНАЯ ПЛАТА', 'Зарплата:Заработная плата;;C;'],
     ['АВАНС', 'Зарплата:Аванс;;C;'],
     ['ПЕРЕЧИСЛЕНИЕ ПРЕМИИ', 'Зарплата:Премиальные;;C;'],
     ['ОТПУСКНЫЕ', 'Зарплата:Отпускные;;C;'],
     ['командиров', 'Зарплата:Командировочные;;C;'],
     ['GALAMART', 'Товары:Хозтовары;;C;'],
     ['в сбербанк', 'Оплата счетов:Ипотека;;C;'],
     ['Стрелка', 'Транспорт:Автобус;;C;'],
     ['ГИС ЖКХ', 'Оплата счетов:Квартира;;C;'],
     ['SUSHIVOK', 'Питание:Общественное питание;;C;'],
     ['Alfa', 'Снятие наличных;;C;'],
     ['ATM ', 'Снятие наличных;;C;'],
     ['SH RIAZANOVSK', 'Снятие наличных;;C;'],
     ['МТС', 'Оплата счетов:Телефон;;C;'],
     ['метрополитен', 'Транспорт:Метро;;C;'],
     ['OAO CENTRALNA', 'Транспорт:Электричка;;C;'],
     ['OAO Centralnaya', 'Транспорт:Электричка;;C;'],
     ['SVYAZNOY', 'Товары:Бытовая техника;;C;'],
     ['YAKUSHENKO', 'Товары:Хозтовары;;C;'],
     ['MK-NET', 'Оплата счетов:Интернет;;C;'],
     ['Билайн', 'Оплата счетов:Телефон;;C;'],
     ['ELEKTROINSTRU', 'Товары:Хозтовары;;C;'],
     ['FIXPRICE', 'Товары:Хозтовары;;C;'],
     ['Konditerskaya', 'Питание:Продукты;;C;'],
     ['PEKAROCHKA', 'Питание:Продукты;;C;'],
     ['PITSTSA EKSPR', 'Питание:Общественное питание;;C;'],
     ['Shokoladnitsa', 'Питание:Общественное питание;;C;'],
     ['JSC IMPERIAL', 'Питание:Общественное питание;;C;'],
     ['FENIKS', 'Питание:Общественное питание;;C;'],
#     ['SHOKOLADNITSA', 'Питание:Общественное питание;;C;'],
     ['TODASE', 'Питание:Общественное питание;;C;'],
     ['NOVYE KUZMENK\BOBRENOK', 'Питание:Общественное питание;;C;'],
     ['NIOKKI', 'Питание:Общественное питание;;C;'],
     ['SALTENAS', 'Питание:Общественное питание;;C;'],
     ['LAKI KITCHEN', 'Питание:Общественное питание;;C;'],
     ['KFC ', 'Питание:Общественное питание;;C;'],
     ['MCDONALDS', 'Питание:Общественное питание;;C;'],
     ['MONASTYRSKIY', 'Питание:Общественное питание;;C;'],
     ['115\OOO CPT', 'Питание:Общественное питание;;C;'],
     ['12\MAGAZIN PRODU', 'Питание:Общественное питание;;C;'],
     ['SHOKO', 'Питание:Общественное питание;;C;'],
     ['V\IP ORESHKINA', 'Питание:Общественное питание;;C;'],
     ['TASHIR', 'Питание:Общественное питание;;C;'],
     ['PYA\KLIMENTOVSKIY', 'Питание:Общественное питание;;C;'],
     ['SRET\BEVERLY HILLS', 'Питание:Общественное питание;;C;'],
     ['Testo i Syr', 'Питание:Общественное питание;;C;'],
     ['SEMEJNYJ STIL', 'Товары:Одежда;;C;'],
     ['налог', 'Оплата счетов:Налоги;;C;'],
     ['AKVAFOR', 'Товары:Хозтовары;;C;'],
     ['MOSHOZTORG', 'Товары:Хозтовары;;C;'],
     ['CHIP I DIP', 'Товары:Бытовая техника;;C;'],
     ['SUBWAY', 'Питание:Общественное питание;;C;'],
     ['GORBUNOV', 'Питание:Продукты;;C;'],
     ['KRASNOEBELOE', 'Питание:Продукты;;C;'],
     ['INVITRO', 'Услуги:Медицина;;C;'],
     ['BRAVO MED', 'Услуги:Медицина;;C;'],
     ['ETOILE', 'Товары:Косметика и парфюмерия;;C;'],
     ['YVES ROCHER', 'Товары:Косметика и парфюмерия;;C;'],
     ['MOSENERGOSBYT', 'Оплата счетов:Электричество;;C;'],
     ['KOLUMB', 'Товары:Одежда;;C;'],
     ['MASCOTTE', 'Товары:Одежда;;C;'],
     ['LEVIS', 'Товары:Одежда;;C;'],
     ['TDK KRUG', 'Товары:Одежда;;C;'],
     ['STA\IP MARTYNOVA', 'Товары:Одежда;;C;'],
     ['ZENDEN', 'Товары:Одежда и обувь;;C;'],
     ['MOSMETRO', 'Транспорт:Метро;;C;'],
     ['OZON', 'Товары:Хозтовары;;C;'],
     ['PYATEROCHKA', 'Питание:Продукты;;C;'],
     ['YandexTic', 'Досуг:Развлечения;;C;'],
     ['Перевод', 'Досуг:Развлечения;;C;'],
     ['MIRAN', 'Товары:Хозтовары;;C;'],
     ['POSUDA', 'Товары:Хозтовары;;C;'],
     ['CPPC', 'Транспорт:Электричка;;C;'],
     ['RZD', 'Транспорт:Поезд;;C;'],
     ['POBEDA', 'Транспорт:Самолет;;C;'],
     ['Zoomagazin', 'Питание:Питание животные;;C;'],
     ['CHETYRE LAPY', 'Питание:Питание животные;;C;'],
     ['Rodyuk', 'Питание:Продукты;;C;'],
     ['APTEK', 'Услуги:Медицина;;C;'],
     ['Aptek', 'Услуги:Медицина;;C;'],
     ['apteka', 'Услуги:Медицина;;C;'],
     ['RIGLA ', 'Услуги:Медицина;;C;'],
     ['DIXY', 'Питание:Продукты;;C;'],
     ['POROKHNIN', 'Питание:Продукты;;C;'],
     ['KIKA', 'Питание:Продукты;;C;'],
     ['MAGNIT', 'Питание:Продукты;;C;'],
     ['VODOKANAL', 'Оплата счетов:Водоснабжение;;C;'],
     ['DIVO', 'Услуги:Медицина;;C;'],
     ['PRODEKSIM', 'Питание:Продукты;;C;'],
     ['VKUSVILL', 'Питание:Продукты;;C;'],
     ['REMIT', 'Питание:Продукты;;C;'],
     ['RYA\CVETY', 'Прочее:Подарки;;C;'],
     ['BOOKING CENTE', 'Досуг:Театр и кино;;C;'],
     ['MAGAZIN PODRU', 'Питание:Продукты;;C;'],
     ['MAGAZIN PROST', 'Питание:Продукты;;C;'],
     ['PIVKINA', 'Питание:Продукты;;C;'],
     ['MI\KASSA', 'Питание:Продукты;;C;'],
     ['ALEKSANDRO', 'Питание:Продукты;;C;'],
     ['GUBERNATOR', 'Питание:Продукты;;C;'],
     ['PLOTNIKOV', 'Питание:Продукты;;C;'],
     ['ARGOS', 'Услуги:Медицина;;C;'],
     ['Medisondent', 'Услуги:Медицина;;C;'],
     ['TSD TOMOGRAD', 'Услуги:Медицина;;C;'],
     ['RUSSKIY', 'Питание:Продукты;Мясо;C;'],
     ['MYASNITSKIIY', 'Питание:Продукты;Мясо;C;'],
     ['RYAZANOVSKOE', 'Питание:Продукты;;C;'],
     ['IP KUPREYEVA', 'Питание:Продукты;;C;'],
     ['CASTORAMA', 'Товары:Хозтовары;;C;'],
     ['ZNA\IP ANTONENKO', 'Товары:Хозтовары;;C;'],
     ['FARMATSEV', 'Услуги:Медицина;;C;']]
dct = dict(L)

for lines in open('/home/shru/kmm/all.txt'):
    lines = lines.rstrip()  # удаляем пробелы в конце каждой строки
    if lines.endswith('.') is True:  # удаляем точку в конце строки, если есть
        lines = lines[:-1]

    date = re.findall('\d{2}\.\d{2}\.\d{4}|\d{2}\.\d{2}\.\d{2}', lines)  # ищем все даты в строке и загоняем в список
    date = date.pop()  # берём последний элемент списка (дат может быть несколько)
    indx = date.rindex('.')  # находим индекс разделителя '.'
    mm = date[indx - 2:indx]  # находим месяц
    if lines.find(';HOLD;') < 0:  # если сумма на удержании банком, то дата стоит в виде: yy.mm.dd
        year = date[indx + 1:]  # находим год
        dd = date[indx - 5:indx - 3]  # находим день
    else:
        dd = date[indx + 1:]  # находим год
        year = date[indx - 5:indx - 3]  # находим день
    if len(year) < 4:
        yyyy = year.replace(year, '20' + year)  # если год вида YY, то приводим год к к виду YYYY
    date = yyyy + '-' + mm + '-' + dd + ';;'  # Собираем новый формат даты

    # находим в строке цену
    indx1 = lines.rindex(';')  # ищем индекс разделителя в конце строки
    lines = lines.rstrip(';')  # удаляем разделитель
    indx2 = lines.rindex(';')  # снова ищем разделитель
    test = lines[indx2 + 1:indx1]  # между найденными разделителями будет цена
    if test == '0':
        lines = lines.rstrip('0')  # если цена = 0, то удаляем
        lines = lines.rstrip(';')
        indx3 = lines.rindex(';')
        test1 = lines[indx3 + 1:indx2]
        price = test1
    else:
        price = test
    if price.find(',') < 0:  # ищем в цене разделитель, если нет, то добавляем ",00"
        price = price + ',00'
#    else:
#        indx4 = price.rindex(',')  # ищем индекс разделителя
#        kop = price[indx4 + 1:]  # если разделитель есть, то ищем кол-во знаков после разделителя, если < 2 то добавляем до 2
#        if len(kop) < 2:
#            price = price.replace(kop, kop + '0')
    if lines.find('Основание') < 0 and lines.find('командиров') < 0:  # ищем поступления
        price = "-" + price
# эта фигня сопоставляет каждую строку файла с КАЖДЫМ ключом словаря...
#т.е. берём ключ - ищем в строке если нет, пишем 0 и
# берём след. ключ - есть совпадение - пишем значение. смотрим след. ключ - не находим- пишем 0...
    for i in dct.keys():
        if lines.find(i) > 0:
            rplace = dct[i]
            break
        else:
            rplace = "**"
    line = date + price + ";" + rplace
    
    f = open('/home/shru/kmm/transcode1.csv', 'a')
    f.write(line + '\n')
    f.close()
    #print (line)
    if line.find('**') > 0:
        print (lines)
        #print ('    Не все точки оплаты присутствуют в словаре!')
    #else:
        #print ('всё збс')
